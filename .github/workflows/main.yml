name: "Runs on opened and reopened issues"

on:
  issues:
    types:
      - opened
      - reopened
      - labeled

jobs:
  autoCoder:
    if: contains(github.event.issue.labels.*.name, 'autocoder-bot')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make script file executable
        run: chmod +x ./scripts/script.sh

      - name: Generate Code with ChatGPT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: ./scripts/script.sh $GITHUB_TOKEN $REPOSITORY $ISSUE_NUMBER $OPENAI_API_KEY

      - name: Upload Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: autocoder-artifact
          path: ./autocoder-bot

      - name: Download Artefacts
        uses: actions/download-artifact@v4
        with:
          name: autocoder-artifact
          path: ./autocoder-artifact

      - name: List files recursively
        run: |
          echo "Code generated by ChatGPT:"
          ls -R ./autocoder-artifact/

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-generated code by ChatGPT"
          title: "Auto-generated code by ChatGPT for issue #${{ github.event.issue.number }}"
          body: "This code was generated by ChatGPT based on the issue description."
          branch: "autocoder-branch-${{ github.event.issue.number }}"
          base: "main"
          branch-suffix: timestamp
          labels: "autocoder-bot"
          author: "autocoder-bot <actions@github.com>"
          delete-branch: true

  issue_event_job:
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest

    steps: # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set environment variables and log issue details
      - name: Read and echo issue details
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_ASSIGNEES: ${{ join(github.event.issue.assignees.*.login, ', ') }}
          ISSUE_LABELS: ${{ join(github.event.issue.labels.*.name, ', ') }}
        run: |
          echo "Issue Number: $ISSUE_NUMBER"
          echo "Issue Title: $ISSUE_TITLE"
          echo "Issue Body: $ISSUE_BODY"
          echo "Issue Assignees: $ISSUE_ASSIGNEES"
          echo "Issue Labels: $ISSUE_LABELS"
